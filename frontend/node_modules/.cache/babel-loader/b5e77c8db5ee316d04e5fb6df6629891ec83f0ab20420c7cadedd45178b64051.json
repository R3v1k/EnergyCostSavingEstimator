{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport jwtDecode from 'jwt-decode';\nexport function useUserId() {\n  _s();\n  const token = localStorage.getItem('access_token');\n  return useMemo(() => {\n    if (!token) return null;\n    try {\n      const {\n        sub,\n        exp\n      } = jwtDecode(token); // sub = userId, exp = seconds since epoch\n\n      // token expired?\n      if (Date.now() >= exp * 1000) return null;\n      return sub !== null && sub !== void 0 ? sub : null;\n    } catch {\n      return null;\n    }\n  }, [token]);\n}\n_s(useUserId, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"names":["useMemo","jwtDecode","useUserId","_s","token","localStorage","getItem","sub","exp","Date","now"],"sources":["C:/Users/Михаил/EnergyCostSavingEstimator/frontend/src/hooks/useUserId.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport function useUserId() {\r\n  const token = localStorage.getItem('access_token');\r\n\r\n  return useMemo(() => {\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const { sub, exp } = jwtDecode(token); // sub = userId, exp = seconds since epoch\r\n\r\n      // token expired?\r\n      if (Date.now() >= exp * 1000) return null;\r\n\r\n      return sub ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, [token]);\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAElD,OAAON,OAAO,CAAC,MAAM;IACnB,IAAI,CAACI,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF,MAAM;QAAEG,GAAG;QAAEC;MAAI,CAAC,GAAGP,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC;;MAEvC;MACA,IAAIK,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,GAAG,GAAG,IAAI,EAAE,OAAO,IAAI;MAEzC,OAAOD,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI,IAAI;IACpB,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;AACb;AAACD,EAAA,CAjBeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}