{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useUserId.js\nimport { useMemo } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // ← curly braces!\n\nexport function useUserId() {\n  _s();\n  const token = localStorage.getItem('accessToken');\n  return useMemo(() => {\n    if (!token) return null;\n    try {\n      const {\n        userId,\n        exp\n      } = jwtDecode(token);\n      if (Date.now() >= exp * 1000) return null;\n      return userId !== null && userId !== void 0 ? userId : null;\n    } catch {\n      return null;\n    }\n  }, [token]);\n}\n_s(useUserId, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"names":["useMemo","jwtDecode","useUserId","_s","token","localStorage","getItem","userId","exp","Date","now"],"sources":["C:/Users/Михаил/EnergyCostSavingEstimator/frontend/src/hooks/useUserId.js"],"sourcesContent":["// hooks/useUserId.js\r\nimport { useMemo } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';   // ← curly braces!\r\n\r\nexport function useUserId() {\r\n  const token = localStorage.getItem('accessToken');\r\n\r\n  return useMemo(() => {\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const { userId, exp } = jwtDecode(token);\r\n      if (Date.now() >= exp * 1000) return null;\r\n      return userId ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, [token]);\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAG;;AAE1C,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEjD,OAAON,OAAO,CAAC,MAAM;IACnB,IAAI,CAACI,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF,MAAM;QAAEG,MAAM;QAAEC;MAAI,CAAC,GAAGP,SAAS,CAACG,KAAK,CAAC;MACxC,IAAIK,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,GAAG,GAAG,IAAI,EAAE,OAAO,IAAI;MACzC,OAAOD,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,IAAI;IACvB,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;AACb;AAACD,EAAA,CAdeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}